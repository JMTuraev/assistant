generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:102030@localhost:3306/main"
}

model Account {

  id                 Int      @id @unique @default(autoincrement())
  id_u               String   @unique
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {

  id                 Int      @id @unique @default(autoincrement())
  id_u               String   @unique
  sessionToken       String   @unique
  userId             Int
  expires            DateTime
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model VerificationToken {

  identifier         Int      @id @unique @default(autoincrement())
  token              String   @unique
  expires            DateTime

  @@unique([identifier, token])

}

model User {

  id                 Int      @id @unique @default(autoincrement())
  id_u               String   @unique
  login              String
  password           String 
  userLevelRelation  Role     @relation(fields: [userLevel], references: [id_u], onDelete: Cascade, onUpdate: Cascade)
  userLevel          String 
  firstName          String? 
  surName            String?
  fatherName         String?
  email              String?  @unique
  phone              String?  @unique
  location           String?
  accounts           Account[]
  sessions           Session[]
  company            Company[]
  companyRelation    CompanyRelation[]
  parrentRelation    UserRelation[] @relation("parrentRelation")
  childRelation      UserRelation[] @relation("childRelation")


}

model UserRelation {

  id                 Int      @id @unique @default(autoincrement())
  id_u               String   @unique
  parrentRelation    User     @relation("parrentRelation", fields: [parrent], references: [id_u], onDelete: Cascade, onUpdate: Cascade)
  parrent            String
  childRelation      User     @relation("childRelation",     fields: [child], references: [id_u], onDelete: Cascade, onUpdate: Cascade)
  child              String

}

model Company {

  id                 Int      @id @unique @default(autoincrement())
  id_u               String   @unique
  name               String
  category           String // Вид деятельности
  location           String
  lawAddress         String   @unique // Юридечкиский адресс
  inn                String
  bankAccount        String // рассчетный счет
  mfo                String   @unique
  ownerRelation      User     @relation(fields: [owner], references: [id_u], onDelete: Cascade, onUpdate: Cascade)
  owner              String
  companyRelation    CompanyRelation[]

}

model CompanyRelation {

  id                 Int      @id @unique @default(autoincrement())
  id_u               String   @unique
  userRelation       User     @relation(fields: [user], references: [id_u], onDelete: Cascade, onUpdate: Cascade)
  user               String
  companyRelation    Company  @relation(fields: [company], references: [id_u], onDelete: Cascade, onUpdate: Cascade)
  company            String

}

model Market {

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  name               String
  location           String
  lawAddress         String @unique
  company            String

}

model Warehouse {

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  name               String
  location           String
  quantity           Int
  editPrice          Int
  product            String 

}

model ComingWarehouse{

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  quantity           Int
  price              Int
  supplier           String
  unit               String // Ед. измерения
  date               DateTime
  product            String 

}

model Supplier { // поставщик

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  name               String
  agentName          String?
  agentPhone         String?

}

model Product {

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  name               String
  model              String
  category           String

}

model Role {

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  name               String
  level              Int
  user               User[]

}

model Client {

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  firstName          String 
  surName            String 
  fatherName         String
  passportSeries     String
  registeredByWhom   String // кем выдан пасспорт
  dateOfPassport     String // дата выдачи пасспорта
  placeOfWork        String // место работы
  phoneOfWork        String @unique
  phone              String @unique
  comment            String
  email              String @unique
  location           String
  
}

model Money { // Истончик от магазина

  id                 Int    @id @unique @default(autoincrement())
  id_u               String   @unique
  amount             Int 
  typeAmount         Int
  date               DateTime // начало
  period             DateTime? // конец
  percent            Int?
  credit             String?
  client             String

}